#!/usr/bin/env python3
"""
駅情報がない町に最寄り駅を手動でマッピング
"""
import pandas as pd

# 各町の最寄り駅と路線を手動で定義
MISSING_TOWNS_STATIONS = {
    # 世田谷区
    ('世田谷区', '上祖師谷'): ('千歳烏山', '京王線'),
    ('世田谷区', '千歳台'): ('千歳烏山', '京王線'),
    ('世田谷区', '喜多見'): ('喜多見', '小田急線'),
    ('世田谷区', '大蔵'): ('成城学園前', '小田急線'),
    ('世田谷区', '宇奈根'): ('二子玉川', '東急田園都市線、東急大井町線'),
    ('世田谷区', '岡本'): ('二子玉川', '東急田園都市線、東急大井町線'),
    ('世田谷区', '深沢'): ('桜新町', '東急田園都市線'),
    ('世田谷区', '玉堤'): ('尾山台', '東急大井町線'),
    ('世田谷区', '砧公園'): ('用賀', '東急田園都市線'),
    
    # 北区
    ('北区', '豊島'): ('王子神谷', '東京メトロ南北線'),
    
    # 台東区
    ('台東区', '今戸'): ('浅草', '東京メトロ銀座線、都営浅草線、東武スカイツリーライン'),
    ('台東区', '東浅草'): ('浅草', '東京メトロ銀座線、都営浅草線、東武スカイツリーライン'),
    ('台東区', '橋場'): ('南千住', 'JR常磐線、東京メトロ日比谷線、つくばエクスプレス'),
    
    # 品川区
    ('品川区', '八潮'): ('品川シーサイド', 'りんかい線'),
    
    # 墨田区
    ('墨田区', '東墨田'): ('八広', '京成押上線'),
    
    # 大田区
    ('大田区', '中央'): ('大森', 'JR京浜東北線'),
    ('大田区', '京浜島'): ('大森海岸', '京急本線'),
    ('大田区', '令和島'): ('流通センター', '東京モノレール'),
    ('大田区', '城南島'): ('流通センター', '東京モノレール'),
    ('大田区', '東海'): ('流通センター', '東京モノレール'),
    
    # 杉並区
    ('杉並区', '善福寺'): ('西荻窪', 'JR中央線'),
    ('杉並区', '成田西'): ('南阿佐ケ谷', '東京メトロ丸ノ内線'),
    ('杉並区', '本天沼'): ('荻窪', 'JR中央線、東京メトロ丸ノ内線'),
    ('杉並区', '桃井'): ('荻窪', 'JR中央線、東京メトロ丸ノ内線'),
    ('杉並区', '清水'): ('荻窪', 'JR中央線、東京メトロ丸ノ内線'),
    
    # 板橋区
    ('板橋区', '四葉'): ('赤塚', '東武東上線'),
    ('板橋区', '西台'): ('西台', '都営三田線'),
    
    # 江戸川区
    ('江戸川区', '上一色'): ('新小岩', 'JR総武線'),
    ('江戸川区', '下篠崎町'): ('篠崎', '都営新宿線'),
    ('江戸川区', '中央'): ('新小岩', 'JR総武線'),
    ('江戸川区', '北篠崎'): ('篠崎', '都営新宿線'),
    ('江戸川区', '北葛西'): ('西葛西', '東京メトロ東西線'),
    ('江戸川区', '南葛西'): ('葛西', '東京メトロ東西線'),
    ('江戸川区', '大杉'): ('東大島', '都営新宿線'),
    ('江戸川区', '新堀'): ('一之江', '都営新宿線'),
    ('江戸川区', '本一色'): ('新小岩', 'JR総武線'),
    ('江戸川区', '東松本'): ('新小岩', 'JR総武線'),
    ('江戸川区', '東篠崎'): ('篠崎', '都営新宿線'),
    ('江戸川区', '東篠崎町'): ('篠崎', '都営新宿線'),
    ('江戸川区', '松島'): ('新小岩', 'JR総武線'),
    ('江戸川区', '松本'): ('新小岩', 'JR総武線'),
    ('江戸川区', '興宮町'): ('小岩', 'JR総武線'),
    ('江戸川区', '西一之江'): ('一之江', '都営新宿線'),
    ('江戸川区', '西小松川町'): ('東大島', '都営新宿線'),
    ('江戸川区', '西篠崎'): ('篠崎', '都営新宿線'),
    ('江戸川区', '鹿骨'): ('篠崎', '都営新宿線'),
    ('江戸川区', '鹿骨町'): ('篠崎', '都営新宿線'),
    
    # 江東区
    ('江東区', '中央防波堤'): ('テレコムセンター', 'ゆりかもめ'),
    ('江東区', '千石'): ('住吉', '東京メトロ半蔵門線、都営新宿線'),
    ('江東区', '東砂'): ('南砂町', '東京メトロ東西線'),
    ('江東区', '海の森'): ('テレコムセンター', 'ゆりかもめ'),
    ('江東区', '若洲'): ('新木場', 'JR京葉線、東京メトロ有楽町線、りんかい線'),
    
    # 練馬区
    ('練馬区', '三原台'): ('石神井公園', '西武池袋線'),
    ('練馬区', '土支田'): ('光が丘', '都営大江戸線'),
    ('練馬区', '大泉学園町'): ('大泉学園', '西武池袋線'),
    ('練馬区', '大泉町'): ('大泉学園', '西武池袋線'),
    ('練馬区', '石神井台'): ('石神井公園', '西武池袋線'),
    ('練馬区', '立野町'): ('吉祥寺', 'JR中央線、京王井の頭線'),
    ('練馬区', '西大泉'): ('大泉学園', '西武池袋線'),
    ('練馬区', '西大泉町'): ('大泉学園', '西武池袋線'),
    ('練馬区', '谷原'): ('石神井公園', '西武池袋線'),
    
    # 葛飾区
    ('葛飾区', '南水元'): ('金町', 'JR常磐線'),
    ('葛飾区', '奥戸'): ('青砥', '京成本線、京成押上線'),
    ('葛飾区', '東水元'): ('金町', 'JR常磐線'),
    ('葛飾区', '水元'): ('金町', 'JR常磐線'),
    ('葛飾区', '水元公園'): ('金町', 'JR常磐線'),
    ('葛飾区', '細田'): ('小岩', 'JR総武線'),
    ('葛飾区', '西新小岩'): ('新小岩', 'JR総武線'),
    ('葛飾区', '西水元'): ('金町', 'JR常磐線'),
    
    # 足立区
    ('足立区', '佐野'): ('谷塚', '東武スカイツリーライン'),
    ('足立区', '保木間'): ('竹ノ塚', '東武スカイツリーライン'),
    ('足立区', '六木'): ('八潮', 'つくばエクスプレス'),
    ('足立区', '加賀'): ('谷在家', '日暮里・舎人ライナー'),
    ('足立区', '千住元町'): ('北千住', 'JR常磐線、東京メトロ千代田線、東京メトロ日比谷線、東武スカイツリーライン、つくばエクスプレス'),
    ('足立区', '千住大川町'): ('北千住', 'JR常磐線、東京メトロ千代田線、東京メトロ日比谷線、東武スカイツリーライン、つくばエクスプレス'),
    ('足立区', '千住桜木'): ('北千住', 'JR常磐線、東京メトロ千代田線、東京メトロ日比谷線、東武スカイツリーライン、つくばエクスプレス'),
    ('足立区', '堀之内'): ('江北', '日暮里・舎人ライナー'),
    ('足立区', '大谷田'): ('北綾瀬', '東京メトロ千代田線'),
    ('足立区', '宮城'): ('高野', '日暮里・舎人ライナー'),
    ('足立区', '平野'): ('梅島', '東武スカイツリーライン'),
    ('足立区', '本木'): ('扇大橋', '日暮里・舎人ライナー'),
    ('足立区', '本木南町'): ('扇大橋', '日暮里・舎人ライナー'),
    ('足立区', '本木東町'): ('扇大橋', '日暮里・舎人ライナー'),
    ('足立区', '東保木間'): ('竹ノ塚', '東武スカイツリーライン'),
    ('足立区', '東六月町'): ('北綾瀬', '東京メトロ千代田線'),
    ('足立区', '神明'): ('六町', 'つくばエクスプレス'),
    ('足立区', '花畑'): ('竹ノ塚', '東武スカイツリーライン'),
    ('足立区', '西保木間'): ('竹ノ塚', '東武スカイツリーライン'),
    ('足立区', '辰沼'): ('谷塚', '東武スカイツリーライン'),
    ('足立区', '鹿浜'): ('西新井大師西', '日暮里・舎人ライナー'),
}

def main():
    # 既存のCSVファイルを読み込み
    input_file = "/Users/mitsuimasaharu/Documents/CLI_CODE/tochijihai/tokyo-wellbeing-map/backend/app/data/tokyo_townlist_with_stations_complete_final.csv"
    df = pd.read_csv(input_file, encoding='utf-8-sig')
    
    # 修正カウンター
    fixed_count = 0
    
    # 各町の駅情報を更新
    for (ward, town), (station, line) in MISSING_TOWNS_STATIONS.items():
        # 該当する行を探す
        mask = (df['区名'] == ward) & (df['町名'] == town)
        if mask.sum() > 0:
            # 駅情報を更新
            df.loc[mask, '最寄り駅'] = station
            df.loc[mask, '路線'] = line
            df.loc[mask, '駅情報'] = f"{station}｜{line}"
            fixed_count += 1
            print(f"✓ {ward} {town} → {station}｜{line}")
        else:
            print(f"× {ward} {town} - データが見つかりません")
    
    # CSVファイルに保存
    output_file = "/Users/mitsuimasaharu/Documents/CLI_CODE/tochijihai/tokyo-wellbeing-map/backend/app/data/tokyo_townlist_with_stations_100percent.csv"
    df.to_csv(output_file, index=False, encoding='utf-8-sig')
    
    print(f"\n修正完了: {fixed_count}町の駅情報を追加しました")
    print(f"出力ファイル: {output_file}")
    
    # 最終統計
    total_towns = len(df)
    with_station = len(df[(df['最寄り駅'].notna()) & (df['最寄り駅'] != '')])
    with_line = len(df[(df['路線'].notna()) & (df['路線'] != '')])
    
    print(f"\n=== 最終統計 ===")
    print(f"総町数: {total_towns}")
    print(f"駅情報あり: {with_station} ({with_station/total_towns*100:.1f}%)")
    print(f"路線情報あり: {with_line} ({with_line/total_towns*100:.1f}%)")

if __name__ == "__main__":
    main()